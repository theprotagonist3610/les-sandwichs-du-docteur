rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
   match /secteurs_de_livraison/{docId} {
      allow read: if true;        // Tout le monde peut lire
      allow write: if false;      // Personne ne peut modifier, ajouter ou supprimer
    }
    match /numero_ordre/ordre {
  // Tout le monde peut lire, créer et modifier
     allow read, create, update: if true;
  // Seul l'admin peut supprimer
     allow delete: if request.auth != null && request.auth.token.admin == true;
   }
    match /utilisateurs/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
    }
     match /toutes_les_commandes/{commandeId} {
       // ✅ Admin : accès complet
      allow read, write: if request.auth != null &&
        get(/databases/$(database)/documents/utilisateurs/$(request.auth.uid)).data.role == "admin";

      // ✅ Client :
      allow create: if request.auth != null && request.resource.data.email == request.auth.token.email;
      allow read: if request.auth != null && resource.data.email == request.auth.token.email;
    }
    // tu peux aussi restreindre d'autres collections ici
     // Règle pour la collection "menu"
    match /menus/{docId} {
      // Lecture ouverte à tous (optionnel)
      allow read: if true;
      // Écriture seulement si l'utilisateur est admin dans "utilisateurs"
      allow write: if request.auth != null &&
        get(/databases/$(database)/documents/utilisateurs/$(request.auth.uid)).data.role == "admin";
    }
    match /supermenus/{docId} {
      // Lecture ouverte à tous (optionnel)
      allow read: if true;
      // Écriture seulement si l'utilisateur est admin dans "utilisateurs"
      allow write: if request.auth != null &&
        get(/databases/$(database)/documents/utilisateurs/$(request.auth.uid)).data.role == "admin";
    }
    match /stock/{docId} {
      // Écriture seulement si l'utilisateur est admin dans "utilisateurs"
      allow read, update, write, delete: if request.auth != null &&
        get(/databases/$(database)/documents/utilisateurs/$(request.auth.uid)).data.role == "admin";
    }
    match /ingredients/{docId} {
      // Écriture seulement si l'utilisateur est admin dans "utilisateurs"
      allow read : if request.auth != null && true;
      allow update, write, delete: if request.auth != null &&
        get(/databases/$(database)/documents/utilisateurs/$(request.auth.uid)).data.role == "admin";
    }
    match /alcool/{docId} {
      // Écriture seulement si l'utilisateur est admin dans "utilisateurs"
      allow read : if request.auth != null && true;
      allow update, write, delete: if request.auth != null &&
        get(/databases/$(database)/documents/utilisateurs/$(request.auth.uid)).data.role == "admin";
    }
    match /stupefiants/{docId} {
      // Écriture seulement si l'utilisateur est admin dans "utilisateurs"
      allow read : if request.auth != null && true;
      allow update, write, delete: if request.auth != null &&
        get(/databases/$(database)/documents/utilisateurs/$(request.auth.uid)).data.role == "admin";
    }
    match /menudujour/{docId} {
      // Écriture seulement si l'utilisateur est admin dans "utilisateurs"
      allow read : if true;
      allow update, write, delete: if request.auth != null &&
        get(/databases/$(database)/documents/utilisateurs/$(request.auth.uid)).data.role == "admin";
    }
    match /modeleproduction/{docId} {
      // Écriture seulement si l'utilisateur est admin dans "utilisateurs"
      allow read, update, write, delete: if request.auth != null &&
        get(/databases/$(database)/documents/utilisateurs/$(request.auth.uid)).data.role == "admin";
    }
    match /productionsprogrammees/{docId} {
      // Écriture seulement si l'utilisateur est admin dans "utilisateurs"
      allow read, update, write, delete: if request.auth != null &&
        get(/databases/$(database)/documents/utilisateurs/$(request.auth.uid)).data.role == "admin";
    }
    match /productionencours/{docId} {
      // Écriture seulement si l'utilisateur est admin dans "utilisateurs"
      allow read, update, write, delete: if request.auth != null &&
        get(/databases/$(database)/documents/utilisateurs/$(request.auth.uid)).data.role == "admin";
    }
    match /productionterminees/{docId} {
      // Écriture seulement si l'utilisateur est admin dans "utilisateurs"
      allow read, update, write, delete: if request.auth != null &&
        get(/databases/$(database)/documents/utilisateurs/$(request.auth.uid)).data.role == "admin";
    }
    match /{colname}/{docId} {
      allow read, update, delete, write: if
        request.auth != null &&
        get(/databases/$(database)/documents/utilisateurs/$(request.auth.uid)).data.role == "admin" &&
        (colname.matches('^matériel_.*$') ||
         colname.matches('^consommable_.*$') ||
         colname.matches('^perissable_.*$'));
    }
  }
}
